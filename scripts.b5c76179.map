{"version":3,"sources":["scripts/models/input.ts","scripts/models/Frame.ts","scripts/models/LocalVariables.ts","scripts/models/native-methods.ts","scripts/models/OperandStack.ts","scripts/models/Frames.ts","scripts/parser/impl/constant-parser.ts","scripts/models/instructions/flow.ts","scripts/models/instructions/math.ts","scripts/models/instructions/objects.ts","scripts/models/instructions/others.ts","scripts/models/instructions/stacks.ts","scripts/models/instructions/index.ts","scripts/parser/impl/instruction-parser.ts","scripts/parser/sample.ts","scripts/templates/inputs.ts","scripts/templates/locals.ts","scripts/templates/stack.ts","scripts/templates/frame.ts","scripts/index.ts"],"names":[],"mappings":"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","file":"scripts.b5c76179.map","sourcesContent":["import { Frame } from \"./Frame\";\nimport { Instruction } from \"./input\";\nimport { Value } from \"./runtime\";\n\nexport interface Constant {\n  index: number;\n  type: string;\n  value: string;\n}\n\nexport enum Type {\n  Constant,\n  // Numeric\n  Int,\n  Long,\n  Float,\n  Double,\n  Char,\n  Short\n}\n\nexport function typePrefix(type: Type): string {\n  switch (type) {\n    case Type.Int:\n      return \"i\";\n    case Type.Long:\n      return \"l\";\n    case Type.Float:\n      return \"f\";\n    case Type.Double:\n      return \"d\";\n    case Type.Char:\n      return \"c\";\n    case Type.Short:\n      return \"s\";\n    default:\n      throw new Error(`Unexpected type ${type}`);\n  }\n}\n\nexport interface Instruction {\n  type?: Type;\n  code: string;\n  apply: (frame: Frame) => void;\n}\n\nexport interface InstructionInstance {\n  position: number;\n  instruction: Instruction;\n  args: any[];\n}\n\nexport interface InstructionBuilder {\n  [index: string]: (args: any[]) => Instruction;\n}\n\nexport interface MethodBody {\n  stack: number;\n  locals: number;\n  args_size: number;\n  code: InstructionInstance[];\n}\n","import { Frames } from \"./Frames\";\nimport { InstructionInstance, MethodBody, Type } from \"./input\";\nimport { LocalVariables } from \"./LocalVariables\";\nimport { OperandStack } from \"./OperandStack\";\nimport { Value } from \"./runtime\";\nimport { TODO } from \"./utils\";\n\nexport class Frame {\n  get currentInstruction(): InstructionInstance {\n    return this.getInstruction(this.position);\n  }\n  constructor(\n    readonly parent: Frames,\n    readonly name: string,\n    public position: number,\n    readonly args: Value[],\n    readonly methodBody: MethodBody,\n    readonly stack: OperandStack,\n    readonly locals: LocalVariables\n  ) {}\n\n  public next(position?: number): void {\n    if (position) {\n      this.getInstruction(position);\n      this.position = position;\n    } else {\n      const idx = this.methodBody.code.indexOf(this.currentInstruction);\n      this.position = this.methodBody.code[idx + 1].position;\n    }\n  }\n\n  public return(value?: Value): void {\n    if (value) {\n      console.log(\n        `${this.name}(${this.args}) return: [${Type[value.type]}] ${\n          value.value\n        }`\n      );\n    } else {\n      console.log(`${this.name}(${this.args}) return: void`);\n    }\n    this.parent.endFrame(value);\n  }\n\n  private getInstruction(pos: number): InstructionInstance {\n    const res = this.methodBody.code.find(inst => inst.position === pos);\n    if (!res) {\n      throw new Error(`No instruction found with position ${pos}`);\n    }\n    return res;\n  }\n}\n","import { Value } from \"./runtime\";\n\nexport class LocalVariables {\n  private _list: Value[] = [];\n  get list(): Value[] {\n    return this._list;\n  }\n\n  constructor(size: number) {\n    this._list = Array.apply(null, Array<Value>(size));\n  }\n\n  public get(i: number): Value {\n    return this._list[i];\n  }\n\n  public set(i: number, value: Value): void {\n    this._list[i] = value;\n  }\n}\n","import { Type } from \"./input\";\nimport { NativeMethod } from \"./native-methods\";\nimport { Value } from \"./runtime\";\n\nexport interface NativeMethod {\n  args_size: number;\n  call(args: any[]): Value | undefined;\n}\n\nfunction printConsole() {\n  const args = Array.from(arguments);\n  console.log(...args);\n  return;\n}\n\nconst println: NativeMethod = {\n  args_size: 1,\n  call(args: any[]) {\n    // first arg is the java/io/PrintStream\n    const value = args[1];\n    if (value.type && value.value) {\n      alert(`[${Type[value.type]}]: ${value.value}`);\n    } else {\n      alert(JSON.stringify(value));\n    }\n    return undefined;\n  }\n};\n\nexport const nativeMethods = new Map<string, NativeMethod>()\n  .set(\"Method java/io/PrintStream.println:(I)V\", println)\n  .set(\"Method java/io/PrintStream.println:(Ljava/lang/Object;)V\", println);\n","import { Value } from \"./runtime\";\n\ntype MaybeValue = Value | null;\n\nexport class OperandStack {\n  private _list: MaybeValue[];\n  private _position = 0;\n  get list(): MaybeValue[] {\n    return this._list;\n  }\n\n  constructor(size: number) {\n    this._list = Array.apply(null, Array<MaybeValue>(size));\n  }\n\n  public push(value: Value): void {\n    this._list[this._position] = value;\n    this._position++;\n  }\n\n  public pop(): Value {\n    const v = this._list[this._position - 1];\n    this._list[this._position - 1] = null;\n    this._position--;\n    return v as Value;\n  }\n\n  public peek(): Value {\n    const v = this._list[this._position - 1];\n    return v as Value;\n  }\n}\n","import { Frame } from \"./Frame\";\nimport { Constant, MethodBody } from \"./input\";\nimport { LocalVariables } from \"./LocalVariables\";\nimport { nativeMethods } from \"./native-methods\";\nimport { OperandStack } from \"./OperandStack\";\nimport { Value } from \"./runtime\";\nimport { TODO } from \"./utils\";\n\nexport class Frames {\n  public readonly frames: Frame[] = [];\n\n  get currentFrame(): Frame {\n    return this.frames[this.frames.length - 1];\n  }\n\n  constructor(\n    readonly constantPool: Constant[],\n    readonly methods: Map<string, MethodBody>,\n    mainArgs: Value[] = []\n  ) {\n    const mainMethod = methods.get(\"main\");\n    if (!mainMethod) {\n      throw new Error(`'main' method is missing`);\n    }\n    const mainFrame = this.createFrame(\"main\", mainMethod, mainArgs);\n    mainFrame.locals.set(0, mainArgs[0]);\n    this.frames.push(mainFrame);\n  }\n\n  public next() {\n    const currentFrame = this.currentFrame;\n    const { methodBody, position } = currentFrame;\n    const instruction = currentFrame.currentInstruction;\n    instruction.instruction.apply(currentFrame);\n  }\n\n  public callStaticMethod(value: string): void {\n    const nativeMethod = nativeMethods.get(value);\n    if (nativeMethod) {\n      const args = this.getArgs(nativeMethod.args_size);\n      const res = nativeMethod.call(args);\n      if (res) {\n        this.currentFrame.stack.push(res);\n      }\n      this.currentFrame.next();\n    } else {\n      const method = this.getMethod(value);\n      const args = this.getArgs(method.args_size);\n      const frame = this.createFrame(value, method, args);\n      this.frames.push(frame);\n      // bind args to locals\n      const locals = this.currentFrame.locals;\n      args.forEach((arg, index) => locals.set(index, arg));\n    }\n  }\n\n  public callObjectMethod(value: any): void {\n    const nativeMethod = nativeMethods.get(value);\n    if (nativeMethod) {\n      const methodArgs = this.getArgs(nativeMethod.args_size);\n      const objectRef = this.currentFrame.stack.pop();\n      const args = [objectRef, ...methodArgs];\n      const res = nativeMethod.call(args);\n      if (res) {\n        this.currentFrame.stack.push(res);\n      }\n      this.currentFrame.next();\n    } else {\n      const method = this.getMethod(value);\n      const methodArgs = this.getArgs(method.args_size);\n      const objectRef = this.currentFrame.stack.pop();\n      const args = [objectRef, ...methodArgs];\n      const frame = this.createFrame(value, method, args);\n      this.frames.push(frame);\n      // bind args to locals\n      const locals = this.currentFrame.locals;\n      args.forEach((arg, index) => locals.set(index, arg));\n    }\n  }\n\n  public endFrame(value?: Value): void {\n    this.frames.pop();\n    if (value) {\n      this.currentFrame.stack.push(value);\n    }\n    if (this.frames.length === 0) {\n      alert(\"Done\");\n    } else {\n      this.currentFrame.next();\n    }\n  }\n\n  private createFrame(name: string, body: MethodBody, args: Value[]): Frame {\n    return new Frame(\n      this,\n      name,\n      body.code[0].position,\n      args,\n      body,\n      new OperandStack(body.stack),\n      new LocalVariables(body.locals)\n    );\n  }\n\n  private getMethod(m: string): MethodBody {\n    const method = this.methods.get(m);\n    if (!method) {\n      throw new Error(\n        `'${m}' not found, got ${Array.from(this.methods.keys())}`\n      );\n    }\n    return method;\n  }\n\n  private getArgs(size: number): Value[] {\n    const args: Value[] = [];\n    const stack = this.currentFrame.stack;\n    for (let i = 0; i < size; i++) {\n      args.push(stack.pop());\n    }\n    return args;\n  }\n}\n","import { Constant } from \"../../models/input\";\nimport { ConstantPoolParser } from \"../parser\";\n\nconst createConstant = (s: string): Constant => {\n    const regexpConstant = /^\\s*#(\\d+) = ([a-zA-Z0-8]*)\\s+(\\S*)(\\s+\\/\\/\\s(.*))?$/gm;\n    const t = regexpConstant.exec(s);\n    const [all, sIndex, type, v0, rest, v1] = Array.from(t || []);\n    const index = parseInt(sIndex, 10);\n    const value = (v1 ? v1 : v0);\n    return {index, type, value};\n};\n\nexport const constantPoolParser: ConstantPoolParser = {\n    parse(input: string): Constant[] {\n        return input.split(\"\\n\")\n            .map((s) => s.trim())\n            .filter((s) => s !== \"\")\n            .map((s) => createConstant(s));\n    },\n};\n","import { Frame } from \"../Frame\";\nimport { Instruction, InstructionBuilder, Type, typePrefix } from \"../input\";\n\n// return, ireturn\n\nexport const flowInstructions: InstructionBuilder = {};\n\ninterface Comparators {\n  [index: string]: (a: number, b: number) => boolean;\n}\n\nconst comparators: Comparators = {\n  ge: (a: number, b: number): boolean => a >= b,\n  gt: (a: number, b: number): boolean => a > b,\n  le: (a: number, b: number): boolean => a <= b,\n  lt: (a: number, b: number): boolean => a < b,\n  ne: (a: number, b: number): boolean => a !== b\n};\n\nconst typedIfCmp = (\n  type: Type,\n  jump: number,\n  cmp: keyof Comparators\n): Instruction => ({\n  type,\n  code: `if_${typePrefix(type)}cmp${cmp}`,\n  apply: (frame: Frame) => {\n    const b = frame.stack.pop().value as number;\n    const a = frame.stack.pop().value as number;\n    const needJump = comparators[cmp](a, b);\n    frame.next(needJump ? jump : undefined);\n  }\n});\n\nconst gotoLabel = (jump: number): Instruction => ({\n  code: `goto`,\n  apply: (frame: Frame) => {\n    frame.next(jump);\n  }\n});\n\nflowInstructions.goto = (args: any[]) => {\n  const jump = parseInt(args[0], 10);\n  return gotoLabel(jump);\n};\n\nflowInstructions.return = () => ({\n  code: `return`,\n  apply: (frame: Frame) => frame.return()\n});\n\n[Type.Int, Type.Long, Type.Float, Type.Double].forEach(type => {\n  const t = typePrefix(type);\n\n  [\"gt\", \"ge\", \"lt\", \"le\", \"ne\"].forEach(cmp => {\n    flowInstructions[`if_${t}cmp${cmp}`] = (args: any[]) => {\n      const jump = parseInt(args[0], 10);\n      return typedIfCmp(type, jump, cmp);\n    };\n  });\n\n  flowInstructions[`${t}return`] = () => ({\n    type,\n    code: `${t}return`,\n    apply: (frame: Frame) => {\n      const value = frame.stack.pop();\n      frame.return(value);\n    }\n  });\n});\n","import { Frame } from \"../Frame\";\nimport { Instruction, InstructionBuilder, Type, typePrefix } from \"../input\";\nimport { TODO } from \"../utils\";\n\n// imul, iinc\n\nexport const mathInstructions: InstructionBuilder = {};\n\nconst typedBinaryOperation = (type: Type, key: string, ope: (a: number, b: number) => number): Instruction => ({\n    type,\n    code: typePrefix(type) + key,\n    apply: (frame: Frame) => {\n        const a = frame.stack.pop();\n        const b = frame.stack.pop();\n        frame.stack.push({ type, value: ope(a.value, b.value) });\n        frame.next();\n    },\n});\n\nconst typedUnaryOperation = (type: Type, key: string, ope: (a: number) => number): Instruction => ({\n    type,\n    code: typePrefix(type) + key,\n    apply: (frame: Frame) => {\n        const a = frame.stack.pop();\n        const b = frame.stack.pop();\n        frame.stack.push({ type, value: ope(a.value) });\n        frame.next();\n    },\n});\n\nconst incr = (index: number, increment: number): Instruction => ({\n    type: Type.Int,\n    code: \"iinc\",\n    apply: (frame: Frame) => {\n        const { type, value } = frame.locals.get(index);\n        frame.locals.set(index, { type, value: value + increment });\n        frame.next();\n    },\n});\n\n// Arithmetic\n[Type.Int, Type.Long, Type.Float, Type.Double].forEach((type) => {\n    const t = typePrefix(type);\n\n    mathInstructions[`${t}add`] = () => typedBinaryOperation(type, \"add\", (a, b) => a + b);\n    mathInstructions[`${t}sub`] = () => typedBinaryOperation(type, \"sub\", (a, b) => a - b);\n    mathInstructions[`${t}mul`] = () => typedBinaryOperation(type, \"mul\", (a, b) => a * b);\n    mathInstructions[`${t}div`] = () => typedBinaryOperation(type, \"rem\", (a, b) => a % b);\n    mathInstructions[`${t}neg`] = () => typedUnaryOperation(type, \"neg\", (a) => - a);\n\n    mathInstructions.iinc = (args: any[]) => {\n        const index = parseInt(args[0], 10);\n        const increment = parseInt(args[1], 10);\n        return incr(index, increment);\n    };\n\n});\n","import { Frame } from \"../Frame\";\nimport { Instruction, InstructionBuilder, Type } from \"../input\";\n\nexport const objectsInstructions: InstructionBuilder = {};\n\nobjectsInstructions.getstatic = (args: any[]) => ({\n  code: \"getstatic\",\n  apply: (frame: Frame) => {\n    const value = args[0];\n    frame.stack.push({ type: Type.Constant, value });\n    frame.next();\n  }\n});\n\nobjectsInstructions.invokestatic = (args: any[]) => ({\n  code: \"invokestatic\",\n  apply: (frame: Frame) => {\n    const value = args[0];\n    frame.parent.callStaticMethod(value);\n  }\n});\n\nobjectsInstructions.invokevirtual = (args: any[]) => ({\n  code: \"invokevirtual\",\n  apply: (frame: Frame) => {\n    const value = args[0];\n    frame.parent.callObjectMethod(value);\n  }\n});\n\n// new, invokespecial, putfield, getfield\n","import { Frame } from \"../Frame\";\nimport { Instruction, InstructionBuilder } from \"../input\";\n\n//\n\nexport const otherInstructions: InstructionBuilder = {};\n","import { Frame } from \"../Frame\";\nimport {\n  Constant,\n  Instruction,\n  InstructionBuilder,\n  Type,\n  typePrefix\n} from \"../input\";\n\nexport const stackInstructions: InstructionBuilder = {};\n\nconst typedConst = (type: Type, value: any): Instruction => ({\n  type,\n  code: `${typePrefix(type)}const_${value}`,\n  apply: (frame: Frame) => {\n    frame.stack.push({ type, value });\n    frame.next();\n  }\n});\n\nconst typedStore = (type: Type, index: number): Instruction => ({\n  type,\n  code: `${typePrefix(type)}store_${index}`,\n  apply: (frame: Frame) => {\n    const value = frame.stack.pop();\n    frame.locals.set(index, value);\n    frame.next();\n  }\n});\n\nconst typedLoad = (type: Type, index: number): Instruction => ({\n  type,\n  code: `${typePrefix(type)}load_${index}`,\n  apply: (frame: Frame) => {\n    const value = frame.locals.get(index);\n    frame.stack.push(value);\n    frame.next();\n  }\n});\n\n// Typed const, store, load\n[Type.Int, Type.Long, Type.Float, Type.Double].forEach(type => {\n  const t = typePrefix(type);\n\n  for (let i = 0; i < 6; i++) {\n    stackInstructions[`${t}const_${i}`] = () => typedConst(type, i);\n  }\n  for (let i = 0; i < 4; i++) {\n    stackInstructions[`${t}store_${i}`] = () => typedStore(type, i);\n    stackInstructions[`${t}load_${i}`] = () => typedLoad(type, i);\n  }\n});\n\nstackInstructions.iconst_m1 = () => typedConst(Type.Int, -1);\n\nstackInstructions.ldc = (args: any[]): Instruction => ({\n  code: \"ldc\",\n  apply: (frame: Frame) => {\n    const value = args[0];\n    frame.stack.push({ type: Type.Constant, value });\n    frame.next();\n  }\n});\n\n// dup, Tstore, Tload, bipush, putstatic, aastore\n","import { Instruction, InstructionBuilder } from \"../input\";\nimport { flowInstructions } from \"./flow\";\nimport { mathInstructions } from \"./math\";\nimport { objectsInstructions } from \"./objects\";\nimport { otherInstructions } from \"./others\";\nimport { stackInstructions } from \"./stacks\";\n\nconst allInstructions: InstructionBuilder = {\n    ...stackInstructions,\n    ...objectsInstructions,\n    ...mathInstructions,\n    ...flowInstructions,\n    ...otherInstructions,\n};\n\nconsole.log(`Got ${Object.keys(allInstructions).length} instructions`);\n\nexport const lookupInstruction = (opscode: string, args: any[]): Instruction => {\n    const i = allInstructions[opscode];\n    if (i) {\n        return i(args);\n    }\n\n    throw new Error(`Opscode ${opscode} not found !`);\n};\n","import { Constant, InstructionInstance, MethodBody } from \"../../models/input\";\nimport { lookupInstruction } from \"../../models/instructions\";\nimport { Value } from \"../../models/runtime\";\nimport { TODO } from \"../../models/utils\";\nimport { MethodParser } from \"../parser\";\n\nclass MethodBodyImpl implements MethodBody {\n  constructor(\n    readonly stack: number,\n    readonly locals: number,\n    readonly args_size: number,\n    readonly code: InstructionInstance[]\n  ) {}\n}\n\nconst createInstruction = (line: string): InstructionInstance => {\n  const regexpInstruction1 = /^\\s*(\\d+): ([a-z0-9_]*)\\s+(\\S*)\\s+\\/\\/\\s(.*)$/gm;\n  const t1 = regexpInstruction1.exec(line);\n  if (t1 !== null) {\n    const [all, sIndex, opscode, v0, v1] = Array.from(t1 || []);\n    const position = parseInt(sIndex, 10);\n    const args = v0 && v1 ? [v1] : v0 ? [v0] : [];\n    const instruction = lookupInstruction(opscode, args);\n    return { position, instruction, args };\n  }\n\n  const regexpInstruction2 = /^\\s*(\\d+): ([a-z0-9_]*)(\\s+([\\d, ]*))?$/gm;\n  const t2 = regexpInstruction2.exec(line);\n  if (t2 !== null) {\n    const [all, sIndex, opscode, v0, v1] = Array.from(t2 || []);\n    const position = parseInt(sIndex, 10);\n    const args = v1 ? (v1 as string).split(\", \") : [];\n    const instruction = lookupInstruction(opscode, args);\n    return { position, instruction, args };\n  }\n\n  throw new Error(`Cannot parse line ${line}`);\n};\n\nexport const methodParser: MethodParser = {\n  parse(\n    constantPool: Constant[],\n    stack: number,\n    locals: number,\n    args_size: number,\n    input: string\n  ) {\n    const code = input\n      .split(\"\\n\")\n      .map(s => s.trim())\n      .filter(s => s !== \"\")\n      .map(s => createInstruction(s));\n\n    return new MethodBodyImpl(stack, locals, args_size, code);\n  }\n};\n","import { MethodBody } from \"./../models/input\";\nimport { constantPoolParser } from \"./impl/constant-parser\";\nimport { methodParser } from \"./impl/instruction-parser\";\n\nconst consts = `#1 = Methodref          #6.#18         // java/lang/Object.\"<init>\":()V\n   #2 = Fieldref           #19.#20        // java/lang/System.out:Ljava/io/PrintStream;\n   #3 = Methodref          #5.#21         // _01_factorial/Factorial.factorial:(I)I\n   #4 = Methodref          #22.#23        // java/io/PrintStream.println:(I)V\n   #5 = Class              #24            // _01_factorial/Factorial\n   #6 = Class              #25            // java/lang/Object\n   #7 = Utf8               <init>\n   #8 = Utf8               ()V\n   #9 = Utf8               Code\n  #10 = Utf8               LineNumberTable\n  #11 = Utf8               factorial\n  #12 = Utf8               (I)I\n  #13 = Utf8               StackMapTable\n  #14 = Utf8               main\n  #15 = Utf8               ([Ljava/lang/String;)V\n  #16 = Utf8               SourceFile\n  #17 = Utf8               Factorial.java\n  #18 = NameAndType        #7:#8          // \"<init>\":()V\n  #19 = Class              #26            // java/lang/System\n  #20 = NameAndType        #27:#28        // out:Ljava/io/PrintStream;\n  #21 = NameAndType        #11:#12        // factorial:(I)I\n  #22 = Class              #29            // java/io/PrintStream\n  #23 = NameAndType        #30:#31        // println:(I)V\n  #24 = Utf8               _01_factorial/Factorial\n  #25 = Utf8               java/lang/Object\n  #26 = Utf8               java/lang/System\n  #27 = Utf8               out\n  #28 = Utf8               Ljava/io/PrintStream;\n  #29 = Utf8               java/io/PrintStream\n  #30 = Utf8               println\n  #31 = Utf8               (I)V`;\n\nconst factorialCode = `0: iconst_1\n1: istore_1\n2: iconst_2\n3: istore_2\n4: iload_2\n5: iload_0\n6: if_icmpgt     19\n9: iload_1\n10: iload_2\n11: imul\n12: istore_1\n13: iinc          2, 1\n16: goto          4\n19: iload_1\n20: ireturn`;\n\nconst mainCode = ` 0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;\n3: iconst_5\n4: invokestatic  #3                  // Method plop:(I)I\n7: invokevirtual #4                  // Method java/io/PrintStream.println:(I)V\n10: return`;\n\nexport const constantPool = constantPoolParser.parse(consts);\n\nexport const sample = new Map<string, MethodBody>()\n  .set(\n    \"Method plop:(I)I\",\n    methodParser.parse(constantPool, 2, 3, 1, factorialCode)\n  )\n  .set(\"main\", methodParser.parse(constantPool, 2, 1, 1, mainCode));\n","import { Constant, Instruction, InstructionInstance } from \"./../models/input\";\n\nexport const renderConstantPool = (constantPool: Constant[]): string => `\n<details>\n    <summary>Constant Pool</summary>\n    <div class=\"constants\">\n      ${\n  constantPool.map((constant) => `\n        <div class=\"index\">${constant.index}</div>\n        <div class=\"type\">${constant.type}</div>\n        <div class=\"value\">${constant.value}</div>\n        `).join(\"\\n\")\n  }\n    </div>\n</details>\n`;\n\n// FIXME Frame, stack, locals, ... current step\nexport const renderMethodCode = (code: InstructionInstance[], position: number): string => {\n  const classes = (inst: InstructionInstance) => ([\n    inst.instruction.type ? `inst-${inst.instruction.type}` : \"\",\n    position === inst.position ? \"selected\" : \"\",\n  ].filter((s) => s !== \"\").join(\" \"));\n  return `\n<ul class=\"code\">\n  ${\n    code.map((inst) => `\n  <li class=\"${classes(inst)}\">\n    <div class=\"position\">${inst.position}</div>\n    <div class=\"code\">${inst.instruction.code}</div>\n    <div class=\"args\">${inst.args}</div>\n\n  </li>\n    `).join(\"\\n\")\n    }\n</ul>\n`;\n};\n","import { Value } from \"../models/runtime\";\nimport { LocalVariables } from \"./../models/LocalVariables\";\n\nconst renderLocalValue = (value: Value | null): string =>\n    value ? `<div class=\"type-${value.type}\" title=\"${value.value}\">${value.value}</div>` :\n        `<div class=\"empty\"></div>`;\n\nexport const renderLocals = (locals: LocalVariables): string => `\n<div class=\"locals\">\n    <header>Locals</header>\n    <div>\n        ${locals.list.map(renderLocalValue).join(\"\\n\")}\n    </div>\n</div>\n`;\n","import { OperandStack } from \"../models/OperandStack\";\nimport { Value } from \"../models/runtime\";\n\nconst renderStackValue = (value: Value | null): string =>\n    value ? `<div class=\"type-${value.type}\" title=\"${value.value}\">${value.value}</div>` :\n        `<div class=\"empty\"></div>`;\n\nexport const renderStack = (stack: OperandStack): string => `\n<div class=\"stack\">\n    <header>Stack</header>\n    <div>\n        ${stack.list.map(renderStackValue).join(\"\\n\")}\n    </div>\n</div>\n`;\n","import { Frame } from \"../models/Frame\";\nimport { Frames } from \"../models/Frames\";\nimport { Value } from \"../models/runtime\";\nimport { renderConstantPool, renderMethodCode } from \"./inputs\";\nimport { renderLocals } from \"./locals\";\nimport { renderStack } from \"./stack\";\n\nconst renderArgs = (args: Value[]): string =>\n  `<span class=\"args\">${args\n    .map(({ type, value }) => `<span class=\"type-${type}\">${value}</span>`)\n    .join(\"\")}</span>`;\n\nconst renderFrame = (frame: Frame, current: boolean): string => `\n<article class=\"frame ${current ? \"current\" : \"\"}\">\n  <header>${frame.name} ${renderArgs(frame.args)}</header>\n  ${renderMethodCode(frame.methodBody.code, frame.position)}\n  ${renderStack(frame.stack)}\n  ${renderLocals(frame.locals)}\n</article>\n`;\n\nexport const renderFrames = (frames: Frames): string => `\n${renderConstantPool(frames.constantPool)}\n<details open class=\"frames\">\n    <summary>Frames</summary>\n    <menu>\n      ${\n        frames.frames.length > 0\n          ? `<button type=\"button\" class=\"next\">↩️ Next</button>`\n          : ``\n      }\n    </menu>\n    <div>\n      ${frames.frames\n        .map(frame => renderFrame(frame, frame === frames.currentFrame))\n        .join(\"\\n\")}\n    </div>\n</details>\n`;\n","import { MethodBody } from \"./models/input\";\nimport { OperandStack } from \"./models/OperandStack\";\n\nimport { Frame } from \"./models/Frame\";\nimport { Frames } from \"./models/Frames\";\nimport { LocalVariables } from \"./models/LocalVariables\";\nimport { constantPool, sample } from \"./parser/sample\";\nimport { renderFrames } from \"./templates/frame\";\n\nconst frames = new Frames(constantPool, sample);\n\nexport const catnip = (elt: HTMLElement | null): void => {\n  if (elt !== null) {\n    elt.innerHTML = renderFrames(frames);\n    const btn = document.querySelector(\n      \".frames menu .next\"\n    ) as HTMLButtonElement;\n    if (btn) {\n      btn.onclick = () => {\n        frames.next();\n        catnip(elt);\n      };\n    }\n  } else {\n    console.warn(\"Cannot mount element:\", elt);\n  }\n};\n\nwindow.catnip = catnip;\n"]}